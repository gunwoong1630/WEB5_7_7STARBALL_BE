name: Deploy to Production

on:
  push:
    branches:
      - prod

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    needs: build-and-push-image

    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ${{ secrets.AWS_EC2_USERNAME }}
          key: ${{ secrets.AWS_EC2_SSH_KEY }}
          script: |
            IMAGE_NAME_LOWERCASE=$(echo ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }} | tr '[:upper:]' '[:lower:]')
            DEPLOY_DIR=~/app

            if [ -d "$DEPLOY_DIR" ]; then
              cd $DEPLOY_DIR
              git pull
            else
              git clone https://github.com/${{ github.repository }}.git $DEPLOY_DIR
              cd $DEPLOY_DIR
            fi

            echo "${{ secrets.ENV_FILE_CONTENT }}" > .env
            export DOCKER_IMAGE_NAME=$IMAGE_NAME_LOWERCASE:main
            
            docker pull $DOCKER_IMAGE_NAME
            docker-compose up -d --remove-orphans
